---
import { getCollection } from 'astro:content';

import Layout from '@/layouts/BaseLayout';
import ListPosts from '@/components/ListPosts.astro';
import { Container } from '@/components/index';

//  NOTE const categories = await getTaxonomy(BLOG_FOLDER, "categories"); のような タクソノミー取得関数にした方が汎用性を持たせやすいかも。
export async function getStaticPaths() {
  const allPosts = await getCollection('posts');
  const uniqueCategories = [...new Set(allPosts.map((post) => post.data.category).flat())];

  return uniqueCategories.map((category) => {
    const filteredPosts = allPosts.filter((post) => post.data.category.includes(category));
    filteredPosts.sort((a, b) => (a.data.pubDate < b.data.pubDate ? 1 : -1)); // 日付の降順
    return {
      params: { category },
      props: { posts: filteredPosts },
    };
  });
}

const { category } = Astro.params;
const { posts } = Astro.props;

// page settings
const title = `カテゴリー: ${category}`;
const pageHeader = true;
const breadcrumb = [
  { label: 'カテゴリー一覧', href: '/categories', 'aria-label': undefined },
  { label: `カテゴリー: ${category}`, href: Astro.url.pathname, 'aria-label': undefined },
];
// page settings end
---

<Layout title={title} pageHeader={pageHeader} breadcrumb={breadcrumb}>
  <Container>
    <ListPosts posts={posts} layout='single' />
  </Container>
</Layout>
